{% extends '_partials/index.twig' %}

{% block meta %}
    {{ parent() }}

    {% if post.meta.canonical ?? false %}
        <link rel="canonical" href="{{ post.meta.canonical }}"/>
    {% else %}
        <link rel="canonical" href="https://stitcher.io{{ detailUrl ?? '/blog' }}/{{ post.id }}"/>
    {% endif %}
{% endblock %}

{% block head %}
    {{ parent() }}

    {{ css.inline('resources/css/blog.scss')|raw }}
    {{ css.inline('resources/css/detail.scss')|raw }}
    {{ css.inline('resources/css/code.scss')|raw }}

    <link rel="webmention" href="https://webmention.io/stitcher.io/webmention"/>
    <link rel="pingback" href="https://webmention.io/stitcher.io/xmlrpc"/>
{% endblock %}

{% block content %}
    {% if (overviewTitle ?? null) == 'programming' and (post.hideBanner ?? false) != true %}
{#        {% include '_partials/ad_scout.twig' %}#}
{#        {% include '_partials/ad_datadog.twig' %}#}
{#        {% include '_partials/ad_github.twig' %}#}
{#        {% include '_partials/ad_shift.twig' %}#}
    {% endif %}

    {# {% if (overviewTitle ?? null) == 'Blog for Devs' %} #}
    {# {% include '_partials/ad_kinsta.twig' %} #}
    {# {% endif %} #}

    <article class="blog">
        <aside>
            &laquo; <a href="{{ post.back ?? overviewUrl ?? '/' }}">back</a> â€” written by
            <a href="{{ post.author.url ?? 'https://twitter.com/brendt_gd' }}" target="_blank" rel="noopener noreferrer">{{ post.author.name ?? 'Brent' }}</a> on&nbsp;{{ post.date|date("F d, Y") }}
        </aside>

        {% if post.disableTitle is not defined %}
            <h1 class="{% if post.smallTitle is defined %}small-title{% endif %}">
                <span>{{ post.title }}</span>
            </h1>
        {% endif %}

        {% if post.author is defined %}
            <div class="wrapper">
                <div class="author footnotes">
                    <h2>Heads up!</h2>
                    This is a guest post, written by
                    <a href="{{ post.author.url ?? '' }}" target="_blank" rel="noopener noreferrer">{{ post.author.name }}</a>. If you're interested in writing guest posts yourselves, you can find all information on how to
                    <a href="/blog/guest-posts">over here</a>.
                </div>
            </div>
        {% endif %}

        {% if 'carbonads' not in post.content %}
            {% if 'githubsponsor' not in post.content %}
                {% if post.disableAds is not defined %}
                    {% include '_partials/ad_carbon.twig' %}
                {% endif %}
            {% endif %}
        {% endif %}

        {{ post.content|raw }}

        {% if 'like-container' not in post.content %}
            {% include '_partials/cta_like.twig' %}
        {% endif %}

        {% if post.footnotes is defined %}
            <nav class="footnotes">
                <h2>Footnotes</h2>

                {% for footnote in post.footnotes %}
                    <p>
                        <a href="{{ footnote.link }}" title="{{ footnote.title }}">{{ footnote.title }}</a>
                        {% if footnote.description is defined %}{{ footnote.description }}{% endif %}
                    </p>
                {% endfor %}
            </nav>
        {% endif %}
    </article>

    <footer>
        <nav class="spacer">
            {% if post.next.url is defined %}
                <a class="cta" href="{{ post.next.url }}">
                    {{ post.next.title }}
                </a>
            {% elseif post.next.id is defined %}
                <a class="cta" href="{{ detailUrl ?? '/blog' }}/{{ post.next.id }}">
                    Next up:&nbsp; {{ post.next.title }}
                </a>
            {% elseif _browse.next.id is defined %}
                <a class="cta" href="{{ detailUrl ?? '/blog' }}/{{ _browse.next.id }}">
                    Next up:&nbsp;
                    {% if _browse.next.teaserTitle is defined %}
                        {{ _browse.next.teaserTitle }}
                    {% else %}
                        {{ _browse.next.title }}
                    {% endif %}
                </a>
            {% else %}
                <a class="cta" href="/">
                    Back
                </a>
            {% endif %}
        </nav>

        {% include '_partials/links.twig' %}
    </footer>
{% endblock %}

{% block footer %}{% endblock %}

{% block scripts %}
    <script>
        const currentUrl = window.location.href.split('/');
        const slug = currentUrl[currentUrl.length - 1];
        const like = document.querySelector('.unliked');
        const liked = document.querySelector('.liked');
        const placeholder = document.querySelector('.placeholder');
        const counter = liked.querySelector('.counter');

        const showLiked = function () {
            placeholder.classList.add('hidden');
            liked.classList.remove('hidden');
            like.classList.add('hidden');
        };

        const showLike = function () {
            placeholder.classList.add('hidden');
            liked.classList.add('hidden');
            like.classList.remove('hidden');
        };

        const uuid = function () {
            return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {
                var r = Math.random() * 16 | 0, v = c == 'x' ? r : (r & 0x3 | 0x8);
                return v.toString(16);
            });
        }

        const getCookie = function (name) {
            const value = `; ${document.cookie}`;

            const parts = value.split(`; ${name}=`);

            if (parts.length === 2) return parts.pop().split(';').shift();
        }

        const setCookie = function (name, value, expire) {
            const date = new Date();

            date.setTime(date.getTime() + (expire * 24 * 60 * 60 * 1000));

            const expireString = "expires=" + date.toUTCString();

            document.cookie = name + "=" + value + ";" + expireString + ";path=/";
        }

        const getLikeId = function () {
            let likeId = getCookie('likeId');

            if (! likeId) {
                likeId = uuid();
                setCookie('likeId', likeId, 999999);
            }

            return likeId;
        }

        const setCounter = function (count) {
            counter.innerHTML = `${count}`;
        };

        const addLike = function () {
            likeId = getLikeId();

            let request = new XMLHttpRequest();

            const url = '/likes/{{ post.id }}/' + likeId;

            request.open('POST', url, true);
            request.setRequestHeader('Content-Type', 'application/x-www-form-urlencoded; charset=UTF-8');
            request.send();

            const newCount = parseInt(counter.innerHTML) + 1;

            setCounter(newCount);

            showLiked();
        };

        const removeLike = function () {
            likeId = getLikeId();

            let request = new XMLHttpRequest();

            const url = '/likes/delete/{{ post.id }}/' + likeId;

            request.open('POST', url, true);
            request.setRequestHeader('Content-Type', 'application/x-www-form-urlencoded; charset=UTF-8');
            request.send();

            const newCount = parseInt(counter.innerHTML) - 1;

            setCounter(newCount);

            showLike();
        };

        const initLikes = function () {
            const url = '/likes/{{ post.id }}/' + getLikeId();

            let request = new XMLHttpRequest();

            request.open('GET', url, true);

            request.onload = function () {
                if (this.status < 200 || this.status >= 400) {
                    return;
                }

                const data = JSON.parse(this.response);

                setCounter(data.like_count);

                if (data.has_liked) {
                    showLiked();
                } else {
                    showLike();
                }
            };

            request.send();
        };

        like.addEventListener('click', addLike);
        liked.addEventListener('click', removeLike);

        document.addEventListener('DOMContentLoaded', initLikes)
    </script>

    {{ parent() }}

    {% if post.disableAds is not defined or post.disableAds == false %}
        <script>
            [].forEach.call(document.querySelectorAll('.adsbygoogle'), function () {
                (adsbygoogle = window.adsbygoogle || []).push({});
            });
        </script>

        {# <script async src="/ads.js"></script> #}
    {% endif %}
{% endblock %}
